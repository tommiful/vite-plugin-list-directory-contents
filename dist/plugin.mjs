// plugin.ts
import * as path from "path";
import { readdir } from "fs/promises";
function makeListFromDirectory(directoryListing, base, filters) {
  const links = directoryListing.reduce((acc, file) => {
    if (file.isDirectory()) {
      acc[0].push(file);
    } else {
      acc[1].push(file);
    }
    return acc;
  }, [[], []]).flat().filter((dirent) => !filters.includes(dirent.name)).map((file) => `<li>
        <a href="${base === "/" ? "" : base}/${file.name}">
           ${file.isDirectory() ? "\u{1F5C2}" : ""}
           ${file.name.endsWith(".html") ? "\u{1F5A5}" : ""}
          ${file.name}
        </a>
        </li>`).join("");
  return links;
}
function htmlPlugin({ baseDir, filterList }) {
  if (!filterList) {
    filterList = [".DS_Store", "package.json", "package-lock.json", "node_modules", ".parcelrc", ".parcel-cache", "dist", "packages"];
  }
  return {
    name: "index-of-directory-listing",
    async transformIndexHtml(html, ctx) {
      if (!ctx.filename.endsWith("index.html"))
        return html;
      const currentFolder = path.join(baseDir, ctx.originalUrl.replace("/index.html", ""));
      const directoryListing = await readdir(currentFolder, { withFileTypes: true });
      const listItems = makeListFromDirectory(directoryListing, ctx.originalUrl, filterList);
      return html.replace("{%DIRECTORY%}", `<h2>Index Of ${ctx.originalUrl}</h2>
        <ul>
          ${ctx.originalUrl === "/" ? "" : '<li><a href="..">\u2B06\uFE0F Up a level</a></li>'}
          ${listItems.length ? listItems : "\u{1F47B} It's very quiet in here. Make a file or two and get coding!"}
        </ul>
        <style>${css}</style>
        <!-- \u{1F970} Generated by a Vite Plugin, Made by Wes Bos for Tasty TypeScript-->
        `);
    }
  };
}
var css = `
  html {
    --blue: #193549;
    --yellow: #ffc600;
    --subtle: rgba(255, 255, 255, 0.1);
    margin: 0;
  }
  h2 {
    text-align: center;
  }
  body {
    font-family: 'Operator Mono', 'Dank Mono', 'Fira Code', 'monospace';
    font-weight: 200;
    background: var(--blue);
    color: white;
    font-size: 1.3rem;
  }
  a {
    color: var(--yellow);
    display: block;
    padding: 10px 20px;
    text-decoration: none;
  }
  a:hover {
    background: var(--subtle);
  }
  li {
    border-bottom: 1px solid var(--subtle);
  }
  li:last-child {
    border-bottom: none;
  }
  ul {
    margin: 0;
    margin: 0 auto;
    max-width: 800px;
    border: 1px solid var(--subtle);
    padding: 0;
    border-radius: 10px;
    list-style:none;
  }
`;
export {
  htmlPlugin
};
